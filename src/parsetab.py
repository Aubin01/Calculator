
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASSIGN DIVIDE LPAREN MINUS MULTIPLY NUMBER PLUS PRINT RPAREN VARIABLEstatement : VARIABLE ASSIGN expressionstatement : expression\n| VARIABLEstatement : PRINT LPAREN VARIABLE RPARENexpression : expression PLUS term\n| expression MINUS termexpression : termterm : term MULTIPLY factor\n| term DIVIDE factorterm : factorfactor : NUMBERfactor : VARIABLEfactor : LPAREN expression RPAREN'
    
_lr_action_items = {'VARIABLE':([0,5,9,10,11,12,15,16,],[2,14,14,14,14,20,14,14,]),'PRINT':([0,],[4,]),'NUMBER':([0,5,9,10,11,15,16,],[8,8,8,8,8,8,8,]),'LPAREN':([0,4,5,9,10,11,15,16,],[5,12,5,5,5,5,5,5,]),'$end':([1,2,3,6,7,8,14,17,18,19,21,22,23,24,],[0,-3,-2,-7,-10,-11,-12,-1,-5,-6,-13,-8,-9,-4,]),'ASSIGN':([2,],[9,]),'MULTIPLY':([2,6,7,8,14,18,19,21,22,23,],[-12,15,-10,-11,-12,15,15,-13,-8,-9,]),'DIVIDE':([2,6,7,8,14,18,19,21,22,23,],[-12,16,-10,-11,-12,16,16,-13,-8,-9,]),'PLUS':([2,3,6,7,8,13,14,17,18,19,21,22,23,],[-12,10,-7,-10,-11,10,-12,10,-5,-6,-13,-8,-9,]),'MINUS':([2,3,6,7,8,13,14,17,18,19,21,22,23,],[-12,11,-7,-10,-11,11,-12,11,-5,-6,-13,-8,-9,]),'RPAREN':([6,7,8,13,14,18,19,20,21,22,23,],[-7,-10,-11,21,-12,-5,-6,24,-13,-8,-9,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'expression':([0,5,9,],[3,13,17,]),'term':([0,5,9,10,11,],[6,6,6,18,19,]),'factor':([0,5,9,10,11,15,16,],[7,7,7,7,7,22,23,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> VARIABLE ASSIGN expression','statement',3,'p_statement_assign','parser.py',9),
  ('statement -> expression','statement',1,'p_statement_expression','parser.py',14),
  ('statement -> VARIABLE','statement',1,'p_statement_expression','parser.py',15),
  ('statement -> PRINT LPAREN VARIABLE RPAREN','statement',4,'p_statement_print','parser.py',25),
  ('expression -> expression PLUS term','expression',3,'p_expression_binop','parser.py',32),
  ('expression -> expression MINUS term','expression',3,'p_expression_binop','parser.py',33),
  ('expression -> term','expression',1,'p_expression_term','parser.py',37),
  ('term -> term MULTIPLY factor','term',3,'p_term_binop','parser.py',41),
  ('term -> term DIVIDE factor','term',3,'p_term_binop','parser.py',42),
  ('term -> factor','term',1,'p_term_factor','parser.py',48),
  ('factor -> NUMBER','factor',1,'p_factor_number','parser.py',52),
  ('factor -> VARIABLE','factor',1,'p_factor_variable','parser.py',56),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_parens','parser.py',63),
]
